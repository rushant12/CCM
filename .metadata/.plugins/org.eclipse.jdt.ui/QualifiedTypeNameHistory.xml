<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.hibernate.annotations.DynamicInsert"/>
<fullyQualifiedTypeName name="org.hibernate.annotations.DynamicUpdate"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestControllerAdvice"/>
<fullyQualifiedTypeName name="com.bank.customer.service.CustomerService"/>
<fullyQualifiedTypeName name="com.bank.customer.repository.CustomerRepository"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ExceptionHandler"/>
<fullyQualifiedTypeName name="com.bank.customer.exception.InvalidDetails"/>
<fullyQualifiedTypeName name="javax.servlet.http.HttpServletRequest"/>
<fullyQualifiedTypeName name="com.bank.customer.exception.ExceptionDTO"/>
<fullyQualifiedTypeName name="com.bank.customer.exception.CustomerAlreadyExist"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.rsocket.RSocketSecurity.JwtSpec"/>
<fullyQualifiedTypeName name="java.util.Date"/>
<fullyQualifiedTypeName name="io.jsonwebtoken.SignatureAlgorithm"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
<fullyQualifiedTypeName name="com.bank.customer.authentication.JWTUtility"/>
<fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
<fullyQualifiedTypeName name="com.bank.customer.entity.Customer"/>
<fullyQualifiedTypeName name="com.bank.customer.model.UserResponse"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
<fullyQualifiedTypeName name="javax.persistence.Entity"/>
<fullyQualifiedTypeName name="javax.persistence.Id"/>
<fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
<fullyQualifiedTypeName name="javax.persistence.GenerationType"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
<fullyQualifiedTypeName name="lombok.Data"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
<fullyQualifiedTypeName name="java.lang.Integer"/>
<fullyQualifiedTypeName name="com.product.repository.ProductRepository"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="com.product.service.ProductService"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
<fullyQualifiedTypeName name="lombok.Getter"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
<fullyQualifiedTypeName name="com.product.model.UserResponse"/>
<fullyQualifiedTypeName name="java.util.Optional"/>
<fullyQualifiedTypeName name="java.lang.RuntimeException"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="com.product.entity.Product"/>
<fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.DeleteMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
<fullyQualifiedTypeName name="org.springframework.web.filter.OncePerRequestFilter"/>
<fullyQualifiedTypeName name="io.jsonwebtoken.Jwts"/>
<fullyQualifiedTypeName name="io.jsonwebtoken.Claims"/>
<fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContextHolder"/>
<fullyQualifiedTypeName name="org.springframework.security.authentication.AbstractAuthenticationToken"/>
<fullyQualifiedTypeName name="com.product.entity.authentication.JwtAuthenticationToken"/>
<fullyQualifiedTypeName name="io.jsonwebtoken.lang.Collections"/>
</qualifiedTypeNameHistroy>
