package com.project.jwtexample.util;

import java.io.IOException;

import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.web.filter.OncePerRequestFilter;

public class JWTFilter extends OncePerRequestFilter {
	
	@Autowired
	JWTUtility JWTUtility;

	@Override
	protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)
			throws ServletException, IOException {
		
		String token = extractJWTFromRequest(request);
		String username = null;
		
		if(token != null)
		{
			username = JWTUtility.extractUsername(token);
			if(username != null && SecurityContextHolder.getContext().getAuthentication() == null)
			{
				if(JWTUtility.validToken(token, username)) {
					
				}
			}
		}
		filterChain.doFilter(request, response);
	}
	
	
	
	
	
	
	public String extractJWTFromRequest(HttpServletRequest request)
	{
		String header = request.getHeader("Authorization");
		
		if(header != null && header.startsWith("Bearer ")) {
			return header.substring(7);
		}
		return null;
	}

}
